--- a/chrome/browser/helium_flag_choices.h
+++ b/chrome/browser/helium_flag_choices.h
@@ -26,6 +26,8 @@ namespace helium {
     {kChannelBeta, kChannelCommandLine, kChannelBeta},
   };
 
+  constexpr const char kDisableEchCommandLine[] = "disable-ech";
+
 }  // namespace helium
 
 #endif  /* CHROME_BROWSER_HELIUM_FLAG_CHOICES_H_ */
--- a/chrome/browser/helium_flag_entries.h
+++ b/chrome/browser/helium_flag_entries.h
@@ -11,4 +11,9 @@
      "Maximum frame rate for Energy Saver",
      "Configures the frame rate the browser is throttled to when Energy Saver is enabled. Helium flag.",
      kOsDesktop, MULTI_VALUE_TYPE(helium::kEnergySaverFrameRateChoices)},
+    {helium::kDisableEchCommandLine,
+     "Disable ECH (Encrypted Client Hello)",
+     "Disables TLS Encrypted Client Hello. Not recommended unless you live in an area with heavy Internet"
+     " censorship and ECH prevents websites from loading. Helium flag.",
+     kOsAll, SINGLE_VALUE_TYPE(helium::kDisableEchCommandLine)},
 #endif  /* CHROME_BROWSER_HELIUM_FLAG_ENTRIES_H_ */
--- a/chrome/browser/ssl/ssl_config_service_manager.cc
+++ b/chrome/browser/ssl/ssl_config_service_manager.cc
@@ -10,6 +10,7 @@
 #include <string_view>
 #include <vector>
 
+#include "base/command_line.h"
 #include "base/containers/to_vector.h"
 #include "base/feature_list.h"
 #include "base/functional/bind.h"
@@ -263,6 +264,10 @@ network::mojom::SSLConfigPtr SSLConfigSe
 
   config->ech_enabled = ech_enabled_.GetValue();
 
+  if (base::CommandLine::ForCurrentProcess()->HasSwitch("disable-ech")) {
+    config->ech_enabled = false;
+  }
+
   if (post_quantum_enabled_.IsManaged()) {
     config->post_quantum_key_agreement_enabled =
         post_quantum_enabled_.GetValue();
